<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Feedbacks</title>

    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.1.3/css/bootstrap.css" />
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"
        integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>
    <script type="text/javascript"
        src="https://cdn.datatables.net/v/bs4/jszip-2.5.0/dt-1.10.20/b-1.6.1/b-colvis-1.6.1/b-html5-1.6.1/cr-1.5.2/datatables.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css"
        integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">

    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
</head>
<style>
    .result {
        margin-top: 20px;
    }

    .loader {
        margin-top: 20px;
        border: 4px solid #f3f3f3;
        border-radius: 50%;
        border-top: 4px solid #3498db;
        width: 30px;
        height: 30px;
        -webkit-animation: spin 2s linear infinite;
        /* Safari */
        animation: spin 2s linear infinite;
    }

    /* Safari */
    @-webkit-keyframes spin {
        0% {
            -webkit-transform: rotate(0deg);
        }

        100% {
            -webkit-transform: rotate(360deg);
        }
    }

    @keyframes spin {
        0% {
            transform: rotate(0deg);
        }

        100% {
            transform: rotate(360deg);
        }
    }
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 50%;
        height: 50%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }
</style>

<body>
    <br />
    <br />

    <center>
        <h4>Inference Website Feedback</h4>
    </center>
    <br />
    <center>
        <div class="post-control-panel">
            <input type="text" placeholder="Search User" id="user-search" />
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            <input type="text" placeholder="Search device" id="device-search" />
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            <label for="rating-dropdown">Choose Rating</label>
            <select id="rating-dropdown">
                <option value="">No Filter</option>
                <option value="5">5</option>
                <option value="4">4</option>
                <option value="3">3</option>
                <option value="2">2</option>
                <option value="1">1</option>
            </select>
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            <label for="language-dropdown">Choose Language</label>
            <select id="language-dropdown">
                <option value="">No Filter</option>
                <option value="unavailable">&ltNot available&gt</option>
                <% languages_map.forEach(function(language_map) { %>
                    <option value="<%= language_map.code %>">
                        <%= language_map.name %>
                    </option>
                    <% }); %>
            </select>
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            <input type="text" placeholder="Search Browser" id="browser-search" />
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            Select Date: <input type="text" id="date_filter" name="datefilter" value=""/>
            &nbsp&nbsp&nbsp&nbsp&nbsp&nbsp
            <button type="button" class="btn btn-secondary" id="clear-filter-btn">Clear Filters</button>
        </div>
    </center>
    <br />
    <table id="feedback-table" class="table table-striped table-bordered" width="98%" style="margin:20px !important;">
        <thead>
            <tr>
                <th>User</th>
                <th>Source</th>
                <th>Language</th>
                <th>Date</th>
                <th>Rating</th>
                <th>Device</th>
                <th>Browser</th>
                <th>Feedback Categories</th>
                <th>Feedback</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
    
    <div id="userModal" class="modal">

        <!-- Modal content -->
        <div class="modal-content">
          <span class="close">&times;</span>
          <center>
            <p> User Information </p>
            <table>
                <thead>
                    
                </thead>
                <tbody>
                    <tr>
                        <td>Name:</td>
                        <td id="modal_username"> Name </td>
                    </tr>
                    <tr>
                        <td>Age:</td>
                        <td id="modal_age"> Age </td>
                    </tr>
                    <tr>
                        <td>Gender:</td>
                        <td id="modal_gender"> Gender </td>
                    </tr>
                    <tr>
                        <td>Duration Contributed:</td>
                        <td id="modal_duration"> Duration </td>
                    </tr>
                </tbody>
            </table>
          </center>
        </div>
      
      </div>
    <script>

        let languagesMap = <%- JSON.stringify(languages_map) %>;
        $(document).ready(function () {
            let modal = document.getElementById("userModal");
            function showUserInfo(userName){
                modal.style.display = "block";
                fetch(`/api/feedback/user/${userName}`).then(resp=> resp.json()).then(result=>{
                    $("#modal_username").html(userName);
                    $("#modal_age").html(result.age);
                    $("#modal_gender").html(result["gender"]);
                    $("#modal_duration").html(result["dur"] + " seconds");
                }).catch(err=>{
                    console.log(err);
                })
            }
            let closeBtn = document.getElementsByClassName("close")[0];
            closeBtn.onclick = function() {
                modal.style.display = "none";
            }
            window.onclick = function(event) {
                if (event.target == modal) {
                    modal.style.display = "none";
                }
            }
            let dateChosen = false;
            function clearFilters(){
                $("#device-search").val("");
                $("#rating-dropdown").val("");
                $("#browser-search").val("");
                $("#language-dropdown").val("");
                $("#user-search").val("");
                resetDateRangeFilter();
            }

            function resetDateRangeFilter(){
                dateChosen = false;
                $('input[name="datefilter"').val('');
                const dateRangeData = $('input[name="datefilter"]').data('daterangepicker');
                dateRangeData.setStartDate(moment());
                dateRangeData.setEndDate(moment());
            }
        
            function getDate() {
                const dateRangeData = $('input[name="datefilter"]').data('daterangepicker');
                let initialDate = dateRangeData.startDate.format('YYYY-MM-DD');
                let finalDate = dateRangeData.endDate.format('YYYY-MM-DD');
                
                if (initialDate == '' || finalDate == '') {
                    return JSON.stringify([]);
                }
                if(dateChosen === false){
                    return JSON.stringify([]);
                }

                return JSON.stringify([initialDate, finalDate]);
            }

            function onDateChosen(start, end) {
                $('#date_filter').val(start.format('DD-MM-YYYY') + ' - ' + end.format('DD-MM-YYYY'));
            }



            try {
                // let start = moment().subtract(29, 'days');
                // let end = moment();
                $('input[name="datefilter"]').daterangepicker({
                    opens: 'left',
                    // timePicker: true,
                    autoUpdateInput: false,
                    locale: {
                        cancelLabel: 'Clear',
                        format: 'DD-MM-YYYY'
                    }
                });
            } catch (e) {
                console.log(e)
            }
            let table = $('#feedback-table').DataTable({
                info: false,
                lengthChange: false,
                processing: true,
                searching: false,
                ordering: false,
                serverSide: true,
                ajax: {
                    "url": "api/feedback",
                    "data": function (d) {
                        return $.extend({}, d, {
                            "device_filter": $("#device-search").val().toLowerCase(),
                            "username_filter": $("#user-search").val().toLowerCase(),
                            "rating_filter": $("#rating-dropdown").val().toLowerCase(),
                            "browser_filter": $("#browser-search").val().toLowerCase(),
                            "date_filter": getDate(),
                            "language_filter": $("#language-dropdown").val().toLowerCase()
                        })
                    }
                },
                // columnDefs: [
                //     // { className: 'text-right', targets: [1] },
                //     { className: 'text-center', targets: [0, 2, 3, 4, 5] },
                // ],
                columns: [
                    {
                        data: 'username',
                        "searchable": true,
                        render: function (data, type, row) {
                            if (data) {
                                return '<a href="javascript:;" id="username_text_link">'+ data +'</a>';
                            } else {
                                return "-"
                            }
                        }
                    },
                    {
                        data: 'audio_path',
                        "searchable": false,
                        render: function (data, type, row) {
                            let transcription = row['text'];
                            let originalText = row['original_text'];
                            if (transcription === "null") {
                                transcription = "< Not Available >"
                            }
                            if (transcription.trim().length === 0) {
                                transcription = "< Empty >"
                            }
                            if (originalText === "null" || originalText === null) {
                                originalText = "< Not Available >"
                            }
                            return '<div> \
                                <audio controls> \
                                    <source src="' + data + '" type="audio/wav"> \
                                </audio> \
                                <p> <b>Output&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp: </b>' + transcription + '</p> \
                                <p> <b>Original Text: </b>' + originalText + '</p> \
                            </div>'
                        }
                    },
                    {
                        data: "language",
                        "searchable": true,
                        render: function (data, type, row) {
                            if (data !== "null") {
                                for (let index in languagesMap) {
                                    if (data === languagesMap[index].code) {
                                        return languagesMap[index].name;
                                    }
                                }
                                return data;
                            }
                            return "Unavailable";
                        }
                    },
                    {
                        data: "created_on",
                        render: function (data, type, row) {
                            return moment(data).format('DD-MM-YYYY hh:mm:ss A');//str_dt.replace('GMT', '').trim()
                        }
                    },
                    {
                        data: "rating",
                        searchable: false,
                        render: function (data, type, row) {
                            return data;
                        }
                        //             let thumbsUp = '<i class="fa fa-thumbs-up fa-2x like" aria-hidden="true"></i>';
                        //             let thumbsDown = '<i class="fa fa-thumbs-down fa-2x like" aria-hidden="true"></i>';
                        // if(data === 'thumbs_up')
                        //              return thumbsUp;
                        //     else
                        //  return thumbsDown;
                        //         }
                    },
                    {
                        data: "device",
                    },
                    {
                        data: "browser",
                    },
                    {
                        data: "feedback_categories",
                        "searchable": false,
                        render: function (data, type, row) {
                            return (data !== undefined && data !== null) ? data.toString() : "-";
                        }
                    },
                    {
                        data: "feedback"
                    }
                    // ,{
                    //     data: 'audio_path',
                    //     "searchable": false,
                    //     render: function (data, type, row) {
                    //         return `<div>Run model</div>`
                    //     }
                    // }
                ]
            });


            $('#clear-filter-btn').on('click', function () {
                clearFilters();
                table.search('').columns().search('').draw();
            });

            $('#device-search, #rating-dropdown, #browser-search, #user-search, #language-dropdown').bind('keyup change', function () {
                table.draw();
            });

            // $('#date-search-btn').bind('click', function () {
            //     const initialDate = $("#initial-date-search").val();
            //     const finalDate = $("#final-date-search").val();
            //     if (initialDate == '' && finalDate == '') {
            //         alert("Warning: You must select both (start and end) date.");
            //     } else {
            //         let date1 = new Date(initialDate);
            //         let date2 = new Date(finalDate);
            //         let diffTime = Math.abs(date2 - date1);
            //         let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));

            //         if (initialDate == '' || finalDate == '') {
            //             alert("Warning: You must select both (start and end) date.");
            //         } else {
            //             if (date1 > date2) {
            //                 alert("Warning: End date should be greater then start date.");
            //             } else {
            //                 table.draw();
            //             }
            //         }
            //     }
            // });

            $('input[name="datefilter"]').on('apply.daterangepicker', function(ev, picker) {
                onDateChosen(picker.startDate, picker.endDate);
                dateChosen = true;
                table.draw();
            });

            $('input[name="datefilter"]').on('cancel.daterangepicker', function(ev, picker) {
                resetDateRangeFilter();
                table.draw();
            });

            



            $('#feedback-table tbody').on('click', 'a', function () {
                const selectedRow = table.row($(this).parents('tr'));
                let data = selectedRow.data();
                let userName = data["username"];
                showUserInfo(userName);
            });
        });
    </script>
</body>

</html>